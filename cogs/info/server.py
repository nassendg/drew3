from disnake import ApplicationCommandInteraction, Embed
from disnake.ext import commands

from configs import configs


class Server(commands.Cog):

    def __init__(self, bot: commands.Bot) -> None:
        self.bot = bot

    async def cog_load(self) -> None:
        print(f"[COG] {self.__cog_name__} was loaded.")

    @commands.slash_command(
        name = "server",
        description = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞",
        dm_permission = False
    )
    async def server(
        self, ctx: ApplicationCommandInteraction,
    ) -> None:
        
        embed = Embed(
            title = f"üå∏„Éª–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ **{ ctx.guild.name }**",
            description = f"–í–ª–∞–¥–µ–ª–µ—Ü: { ctx.guild.owner.mention } ({ ctx.guild.owner })\n–°–æ–∑–¥–∞–Ω: <t:{ int(ctx.guild.created_at.timestamp()) }>",
            color = configs['color']
        )
        if ctx.guild.icon != None: embed.set_thumbnail(ctx.guild.icon)

        member_bot_count = 0
        for member in ctx.guild.members:
            if member.bot == True: member_bot_count += 1

        ver_level_raw = ctx.guild.verification_level.name
        if ver_level_raw == "none": ver_level = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–ö—Ç–æ-—É–≥–æ–¥–Ω–æ –º–æ–∂–µ—Ç –∑–∞–π—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä)"
        elif ver_level_raw == "low": ver_level = "–ù–∏–∑–∫–∏–π (–£—á–∞—Å—Ç–Ω–∏–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π Email)"
        elif ver_level_raw == "medium": ver_level = "–°—Ä–µ–¥–Ω–∏–π (–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π Email –∏ 5 –º–∏–Ω—É—Ç —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞)"
        elif ver_level_raw == "high": ver_level = "–í—ã—Å–æ–∫–∏–π (–î–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –±–æ–ª—å—à–µ 10 –º–∏–Ω—É—Ç)"
        elif ver_level_raw == "highest": ver_level = "–°–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π (–£—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞)"

        embed.add_field(
            name = "üë§„Éª–£—á–∞—Å—Ç–Ω–∏–∫–∏:",
            value = f"–í—Å–µ–≥–æ: { ctx.guild.member_count }\n–õ—é–¥–µ–π: { ctx.guild.member_count - member_bot_count }\n–ë–æ—Ç–æ–≤: { member_bot_count }",
            inline = True
        )
        embed.add_field(
            name = "‚òï„Éª–ö–∞–Ω–∞–ª—ã:",
            value = f"–í—Å–µ–≥–æ: { len(ctx.guild.channels) }\n–¢–µ–∫—Å—Ç–æ–≤—ã–µ: { len(ctx.guild.text_channels) }\n–ì–æ–ª–æ—Å–æ–≤—ã–µ: { len(ctx.guild.voice_channels) }",
            inline = True
        )
        embed.add_field(
            name = "‚ú®„Éª–ü—Ä–æ—á–µ–µ:",
            value = f"–í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: { len(ctx.guild.categories) }\n–†–æ–ª–µ–π: { len(ctx.guild.roles) }\n–≠–º–æ–¥–∑–∏: { len(ctx.guild.emojis) }",
            inline = True
        )
        embed.add_field(
            name = "üõ°Ô∏è„Éª–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏ (–≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏):",
            value = ver_level,
            inline = False
        )

        await ctx.send(embed = embed)


def setup(bot: commands.Bot) -> None:
    bot.add_cog(Server(bot))
